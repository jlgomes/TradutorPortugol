/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

/**
 *
 * @author Josias Gomes Lima
 */

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Reader;

import javax.swing.JOptionPane;


public class TelaPrincipal2 extends javax.swing.JFrame {
	
	Arquivo arq2 = new Arquivo();
	
    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal2() {
        initComponents();
        try {
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\codigoFonte.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\codigoObjeto.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\ArquivoTokens.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\ArquivoTabela.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\ArquivoErros.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\erroSemantico.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\traducao.txt");
		} catch (IOException e) {
			e.printStackTrace();
		}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jDialog1 = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jExecutar = new javax.swing.JButton();
        jLimparPortugol = new javax.swing.JButton();
        jLimparC = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextC = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextPortugol = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jArquivo = new javax.swing.JMenu();
        jAbrir = new javax.swing.JMenuItem();
        jSalvarPortugol = new javax.swing.JMenuItem();
        jSalvarLing_C = new javax.swing.JMenuItem();
        jSair = new javax.swing.JMenuItem();
        jVisualizar = new javax.swing.JMenu();
        jSempreVisivel = new javax.swing.JMenuItem();
        jLexico = new javax.swing.JMenu();
        jTokens = new javax.swing.JMenuItem();
        jTokensValidos = new javax.swing.JMenuItem();
        jTokensInvalidos = new javax.swing.JMenuItem();
        jTabelaSimbolosLexico = new javax.swing.JMenuItem();
        jSintatico = new javax.swing.JMenu();
        jSemantico = new javax.swing.JMenu();
        jAjuda = new javax.swing.JMenu();
        jSobre = new javax.swing.JMenuItem();

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tradutor de Portugol para a Linguagem C");
        setMaximumSize(null);
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel2.setText("Linguagem C");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel3.setText("Portugol");

        jExecutar.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jExecutar.setText("Executar");
        jExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExecutarActionPerformed(evt);
            }
        });

        jLimparPortugol.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLimparPortugol.setText("Limpar");
        jLimparPortugol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLimparPortugolActionPerformed(evt);
            }
        });

        jLimparC.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLimparC.setText("Limpar");
        jLimparC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLimparCActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jTextC.setColumns(20);
        jTextC.setRows(5);
        jScrollPane6.setViewportView(jTextC);

        jTextPortugol.setColumns(20);
        jTextPortugol.setRows(5);
        jScrollPane7.setViewportView(jTextPortugol);

        jArquivo.setText("Arquivo");

        jAbrir.setText("Abrir");
        jAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAbrirActionPerformed(evt);
            }
        });
        jArquivo.add(jAbrir);

        jSalvarPortugol.setText("Salvar (Portugol)");
        jSalvarPortugol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSalvarPortugolActionPerformed(evt);
            }
        });
        jArquivo.add(jSalvarPortugol);

        jSalvarLing_C.setText("Salvar (Ling. C)");
        jSalvarLing_C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSalvarLing_CActionPerformed(evt);
            }
        });
        jArquivo.add(jSalvarLing_C);

        jSair.setText("Sair");
        jSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSairActionPerformed(evt);
            }
        });
        jArquivo.add(jSair);

        jMenuBar1.add(jArquivo);

        jVisualizar.setText("Visualizar");

        jSempreVisivel.setText("Sempre Visível");
        jSempreVisivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSempreVisivelActionPerformed(evt);
            }
        });
        jVisualizar.add(jSempreVisivel);

        jMenuBar1.add(jVisualizar);

        jLexico.setText("Léxico");

        jTokens.setText("Tokens");
        jTokens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTokensActionPerformed(evt);
            }
        });
        jLexico.add(jTokens);

        jTokensValidos.setText("Tokens Válidos");
        jTokensValidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTokensValidosActionPerformed(evt);
            }
        });
        jLexico.add(jTokensValidos);

        jTokensInvalidos.setText("Tokens Inválidos");
        jTokensInvalidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTokensInvalidosActionPerformed(evt);
            }
        });
        jLexico.add(jTokensInvalidos);

        jTabelaSimbolosLexico.setText("Tabela de Símbolos");
        jTabelaSimbolosLexico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTabelaSimbolosLexicoActionPerformed(evt);
            }
        });
        jLexico.add(jTabelaSimbolosLexico);

        jMenuBar1.add(jLexico);

        jSintatico.setText("Sintático");
        jMenuBar1.add(jSintatico);

        jSemantico.setText("Semântico");
        jMenuBar1.add(jSemantico);

        jAjuda.setText("Ajuda");

        jSobre.setText("Sobre");
        jSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSobreActionPerformed(evt);
            }
        });
        jAjuda.add(jSobre);

        jMenuBar1.add(jAjuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 868, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLimparPortugol)
                .addGap(160, 160, 160)
                .addComponent(jExecutar)
                .addGap(145, 145, 145)
                .addComponent(jLimparC)
                .addGap(176, 176, 176))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 5, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(21, 21, 21)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLimparC)
                    .addComponent(jExecutar)
                    .addComponent(jLimparPortugol))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void jLimparCActionPerformed(java.awt.event.ActionEvent evt) {                                         
    	jTextC.setText("");
    	try {
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\codigoFonte.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\codigoObjeto.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\ArquivoTokens.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\ArquivoTabela.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\ArquivoErros.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\erroSemantico.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\traducao.txt");
		} catch (IOException e) {
			e.printStackTrace();
		}
    }                                        

    private void jLimparPortugolActionPerformed(java.awt.event.ActionEvent evt) {                                                
    	jTextPortugol.setText("");
    	try {
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\codigoFonte.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\codigoObjeto.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\ArquivoTokens.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\ArquivoTabela.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\ArquivoErros.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\erroSemantico.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\traducao.txt");
		} catch (IOException e) {
			e.printStackTrace();
		}
    }                                               
    //criar ou deletar o arquivo caso ele já existir
    private void CriarOuDeletarArquivo (String arq) throws IOException{
    	File arquivo = new File(arq);
    	if (!arquivo.exists()) {
	        //cria um arquivo (vazio)
	        arquivo.createNewFile();
	    }else{
	        arquivo.delete();
	        arquivo.createNewFile();
	    }
    }
    
    private void jExecutarActionPerformed(java.awt.event.ActionEvent evt) {  
    	Erro erro = new Erro();
    	int erroLexico = 0;
    	int erroSintatico = 0;
    	int erroSemantico = 0;
    	
    	//criar ou deletar o arquivo caso ele já existir -- evitando lixo de memória!
    	try {
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\codigoFonte.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\codigoObjeto.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\ArquivoTokens.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\ArquivoTabela.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\ArquivoErros.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\erroSemantico.txt");
			CriarOuDeletarArquivo("C:\\Windows\\Temp\\traducao.txt");
		} catch (IOException e) {
			e.printStackTrace();
		}
    	
    	//Gravando em arquivo o conteúdo do TextArea do Portugol
    	try {
    		File arquivo = new File("C:\\Windows\\Temp\\codigoFonte.txt");
    		
    		FileWriter fw = new FileWriter(arquivo, true);
    		 
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(jTextPortugol.getText());
            bw.newLine();
            
            bw.close();
            fw.close();
            
            //Chamar o metódo que faz a Análise Léxica
            arq2.AnaliseLexica();
            
    	} catch (IOException e) { 
    		e.printStackTrace();
    	}
    	
    	//Gravar a tabela hash em Arquivo
    	Tabela.mostrarhash();
    	
    	try {
			//Gravando em arquivo o conteúdo do TextArea do Portugol
    		File arquivoerro = new File("C:\\Windows\\Temp\\ArquivoErros.txt");
    		
    		Reader fwo = new FileReader(arquivoerro);
   		 
			BufferedReader bwo = new BufferedReader(fwo);
			String linha;
			linha = bwo.readLine();
			
			if(linha!=null){
				erro.jErro.setText("Token(s) Inválido(s): \n\n");
				erroLexico = 1;
			}
				
			
			while (linha != null){
				erro.jErro.setText(erro.jErro.getText() +"    "+ linha + "\n");
				linha = bwo.readLine();
			}
			
			bwo.close();
			fwo.close();
    	} catch (IOException e) { 
    		e.printStackTrace();
    	}
    	
    	//chamando o analisador sintatico
        try {
			EG3 eg = new EG3("C:\\Windows\\Temp\\codigoFonte.txt");
			if(eg.simerro==1){
	        	erro.jErro.setText(erro.jErro.getText()+"\n\nErro Sintático: \n\n");
	        	erro.jErro.setText(erro.jErro.getText()+"     - "+eg.erro);
	        	erroSintatico = 1;
	        }
			/*if(eg.simerro==1){
	        	erro.jErro.setText(erro.jErro.getText()+"\n\nErro Sintático: \n\n");
	        	erro.jErro.setText(erro.jErro.getText()+"    "+eg.erro);
	        	erro.show();
	        }else{
	        	if(erroLexico==1)
	        		erro.show();
	        }*/
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        //impressão dos erros semânticos
        try {
			//Gravando em arquivo o conteúdo do TextArea do Portugol
    		File arquivoerro = new File("C:\\Windows\\Temp\\erroSemantico.txt");
    		
    		Reader fwo = new FileReader(arquivoerro);
   		 
			BufferedReader bwo = new BufferedReader(fwo);
			String linha;
			linha = bwo.readLine();
			
			if(linha!=null){
				erro.jErro.setText(erro.jErro.getText() +"\n\nErro(s) Semântico(s): \n\n");
				erroSemantico = 1;
			}
				
			
			while (linha != null){
				erro.jErro.setText(erro.jErro.getText() +"     - "+ linha + "\n");
				linha = bwo.readLine();
			}
			
			bwo.close();
			fwo.close();
    	} catch (IOException e) { 
    		e.printStackTrace();
    	}
        
        if(erroLexico==1 || erroSintatico==1 || erroSemantico==1){
        	erro.show();
        }else{
        	try {
    			//Gravando em arquivo o conteúdo do TextArea do Portugol
        		File arquivoTraduzido = new File("C:\\Windows\\Temp\\traducao.txt");
        		
        		Reader fwo = new FileReader(arquivoTraduzido);
       		 
    			BufferedReader bwo = new BufferedReader(fwo);
    			String linha;
    			linha = bwo.readLine();
    			jTextC.setText("");
    			while (linha != null){
    				jTextC.setText(jTextC.getText()+linha+"\n");
    				linha = bwo.readLine();
    			}
    			
    			bwo.close();
    			fwo.close();
        	} catch (IOException e) { 
        		e.printStackTrace();
        	}        	
        	JOptionPane.showMessageDialog (null, "Traduzido com sucesso!\n", "Informação", JOptionPane.INFORMATION_MESSAGE);
        }
        
        Tabela.excluirtabelahash();
    }                                         

    private void jAbrirActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void jSalvarPortugolActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void jSalvarLing_CActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void jSairActionPerformed(java.awt.event.ActionEvent evt) {                                      
    	this.dispose();
    }                                     

    private void jTokensActionPerformed(java.awt.event.ActionEvent evt) {                                        
    	try {
			//Gravando em arquivo o conteúdo do TextArea do Portugol
    		File arquivoerro = new File("C:\\Windows\\Temp\\ArquivoErros.txt");
    		File arquivoTokens = new File("C:\\Windows\\Temp\\ArquivoTokens.txt");
    		
    		Reader fwo = new FileReader(arquivoerro);
    		Reader fwt = new FileReader(arquivoTokens);
    		
			BufferedReader bwo = new BufferedReader(fwo);
			BufferedReader bwt = new BufferedReader(fwt);
			String linha;
			linha = bwo.readLine();
			String linha2;
			linha2 = bwt.readLine();
			
			if(linha != null || linha2 != null){
				Tokens tokens = new Tokens();
				tokens.show();
			}else{
				JOptionPane.showMessageDialog(null, "Não Existe(m) Token(s) Válido(s) ou Inválido(s)!");
			}
			
			bwt.close();
			fwt.close();
			bwo.close();
			fwo.close();
    	} catch (IOException e) { 
    		e.printStackTrace();
    	}
    }                                       

    private void jTokensValidosActionPerformed(java.awt.event.ActionEvent evt) {                                               
    	try {
			//Gravando em arquivo o conteúdo do TextArea do Portugol
    		File arquivoTkvalidos = new File("C:\\Windows\\Temp\\ArquivoTokens.txt");
    		
    		Reader fwo = new FileReader(arquivoTkvalidos);
   		 
			BufferedReader bwo = new BufferedReader(fwo);
			String linha;
			linha = bwo.readLine();
			
			if(linha != null){
				TokensValidos tokens = new TokensValidos();
				tokens.show();
			}else{
				JOptionPane.showMessageDialog(null, "Não Existe(m) Token(s) Válido(s)!");
			}
			
			bwo.close();
			fwo.close();
    	} catch (IOException e) { 
    		e.printStackTrace();
    	}
    }                                              

    private void jTokensInvalidosActionPerformed(java.awt.event.ActionEvent evt) {                                                 
    	Erro erro = new Erro();
    	try {
			//Gravando em arquivo o conteúdo do TextArea do Portugol
    		File arquivoerro = new File("C:\\Windows\\Temp\\ArquivoErros.txt");
    		
    		Reader fwo = new FileReader(arquivoerro);
   		 
			BufferedReader bwo = new BufferedReader(fwo);
			String linha;
			linha = bwo.readLine();
			
			if(linha!=null){
				erro.jErro.setText("Token(s) Inválido(s): \n\n");
				erro.show();
			}else{
				JOptionPane.showMessageDialog(null, "Não Existe(m) Token(s) Inválido(s)!");
			}
				
			
			while (linha != null){
				erro.jErro.setText(erro.jErro.getText() +"    "+ linha + "\n");
				linha = bwo.readLine();
			}
			
			bwo.close();
			fwo.close();
    	} catch (IOException e) { 
    		e.printStackTrace();
    	}
    }                                                

    private void jTabelaSimbolosLexicoActionPerformed(java.awt.event.ActionEvent evt) {                                                      
    	try {
			//Gravando em arquivo o conteúdo do TextArea do Portugol
    		File arquivoTbSimbolos = new File("C:\\Windows\\Temp\\ArquivoTabela.txt");
    		
    		Reader fwo = new FileReader(arquivoTbSimbolos);
   		 
			BufferedReader bwo = new BufferedReader(fwo);
			String linha;
			linha = bwo.readLine();
			
			if(linha != null){
				TabelaSimbolos tbSimbolos = new TabelaSimbolos();
				tbSimbolos.show();
			}else{
				JOptionPane.showMessageDialog(null, "A Tabela de Símbolos Está Vazia!");
			}
			
			bwo.close();
			fwo.close();
    	} catch (IOException e) { 
    		e.printStackTrace();
    	}
    	
    }                                                     

    private void jSobreActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void jSempreVisivelActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal2().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JMenuItem jAbrir;
    private javax.swing.JMenu jAjuda;
    private javax.swing.JMenu jArquivo;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JButton jExecutar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jLexico;
    private javax.swing.JButton jLimparC;
    private javax.swing.JButton jLimparPortugol;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jSair;
    private javax.swing.JMenuItem jSalvarLing_C;
    private javax.swing.JMenuItem jSalvarPortugol;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JMenu jSemantico;
    private javax.swing.JMenuItem jSempreVisivel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JMenu jSintatico;
    private javax.swing.JMenuItem jSobre;
    private javax.swing.JMenuItem jTabelaSimbolosLexico;
    private javax.swing.JTextArea jTextArea3;
    public javax.swing.JTextArea jTextC;
    public javax.swing.JTextArea jTextPortugol;
    private javax.swing.JMenuItem jTokens;
    private javax.swing.JMenuItem jTokensInvalidos;
    private javax.swing.JMenuItem jTokensValidos;
    private javax.swing.JMenu jVisualizar;
    // End of variables declaration                   
}
